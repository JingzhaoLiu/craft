<!DOCTYPE html>
<html>
<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <link rel="stylesheet" href="style/index.css">
  <script src="<%= appBundle %>"></script>
  <script src="//code.jquery.com/jquery-1.11.3.min.js"></script>
  <script src="/test-build-only/soundEffects.js"></script>
  <script src="/test-build-only/levels.js?<%= getFingerprint() %>"></script>
  <title>Phaser App Playground</title>
</head>
<body>

<div id="phaser-game" style="float:left;"></div>

<textarea id="test-code-area" style="float:left; width:300px; height:300px;"></textarea>
<div style="margin:10px; clear:both;"></div>
<button id="run-button">Run</button>
<button id="reset-button">Reset</button>
<div style="margin:10px; clear:both;"></div>
<button id="previous-level">Previous level</button>
<button id="refresh-button">Refresh</button>
<button id="next-level">Next level</button>
<div style="margin:10px; clear:both;"></div>
<div>Level instructions: <span id="level-instructions" style="font-weight:bold;"></span></div>
<div>Level feedback: <span id="level-feedback" style="font-weight:bold;"></span></div>

<script>
  var demoLevels = window.demoLevels;

  function getParameterByName(name) {
    name = name.replace(/[\[]/, "\\[").replace(/[\]]/, "\\]");
    var regex = new RegExp("[\\?&]" + name + "=([^&#]*)"),
      results = regex.exec(location.search);
    return results === null ? "" : decodeURIComponent(results[1].replace(/\+/g, " "));
  }

  // Initialize test instance of game, exposed to window for debugging.
  var phaserApp = new PhaserApp({
    containerId: 'phaser-game',
    assetRoot: '/assets/',
    audioPlayer: new Sounds()
  });
  var levelNumber = parseInt(getParameterByName('level') || 1, 10);
  var testLevelToLoad = demoLevels[levelNumber];
  phaserApp.loadLevel(testLevelToLoad);

  $('#test-code-area').val(testLevelToLoad.solutionCode);
  $('#level-instructions').html(testLevelToLoad.instructions);

  function runCodeWithParams(code, options) {
    // execute JS code "natively"
    var params = [];
    var args = [];
    for (var k in options) {
      params.push(k);
      args.push(options[k]);
    }
    params.push(code);
    var ctor = function() {
      return Function.apply(this, params);
    };
    ctor.prototype = Function.prototype;
    return new ctor().apply(null, args);
  }

  $('#run-button').click(function () {
    var code = $('#test-code-area').val();
    var codeOrgAPI = phaserApp.codeOrgAPI;
    codeOrgAPI.startCommandCollection();
    runCodeWithParams(code, {
      codeOrgAPI: codeOrgAPI
    });
    codeOrgAPI.startAttempt(function (result) {
      $('#level-feedback').html(result ? "Success!" : "Failure").css("color", result ? "green" : "red");
    });
  });

  $('#reset-button').click(function () {
    phaserApp.codeOrgAPI.resetAttempt();
  });

  $("#refresh-button").click(function() {
    window.location.reload();
  });

  if (!demoLevels[levelNumber - 1]) {
    $('#previous-level').hide();
  }

  if (!demoLevels[levelNumber + 1]) {
    $('#next-level').hide();
  }

  $('#next-level').click(function() {
    window.location.href = "/?level=" + (levelNumber + 1);
  });

  $('#previous-level').click(function() {
    window.location.href = "/?level=" + (levelNumber - 1);
  });

  window.phaserApp = phaserApp;
</script>

<script>
  document.write(
    '<script src="//'
    + window.location.hostname
    + ':<%= liveReloadPort %>/livereload.js"><\/script>'
  );
</script>

</body>
</html>
