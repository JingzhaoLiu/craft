<!DOCTYPE html>
<html>
<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <link rel="stylesheet" href="style/index.css">
  <script src="<%= appBundle %>"></script>
  <script src="//code.jquery.com/jquery-1.11.3.min.js"></script>
  <title>Phaser App Playground</title>
</head>
<body>

<div id="phaser-game" style="float:left;"></div>

<textarea id="test-code-area" style="float:left; width:300px; height:300px;"></textarea>
<div style="margin:10px; clear:both;"></div>
<button id="run-button">Run</button>
<button id="reset-button">Reset</button>
<div style="margin:10px; clear:both;"></div>
<button id="previous-level">Previous level</button>
<button id="next-level">Next level</button>
<div style="margin:10px; clear:both;"></div>
<div>Level instructions: <span id="level-instructions" style="font-weight:bold;"></span></div>
<div>Level feedback: <span id="level-feedback" style="font-weight:bold;"></span></div>

<script>
  var moveForwardBlock = "codeOrgAPI.moveForward(function(){});\n";
  var turnLeftBlock = "codeOrgAPI.turn(function(){}, 'left');\n";
  var turnRightBlock = "codeOrgAPI.turn(function(){}, 'right');\n";
  var destroyBlock = "codeOrgAPI.destroyBlock(function(){}, 'right');\n";
  var whileBlockAhead = function (type, blockCode) {
    return "codeOrgAPI.whilePathAhead(function(){}, '" +
      type + "', function () {" + blockCode + "});\n"
  };

  var demoLevels = {
    0: {
      instructions: "Cut down the trees!",

      groundPlane: ["grass", "grass", "grass", "grass", "grass", "grass", "grass", "grass", "grass", "grass",
        "grass", "grass", "grass", "grass", "grass", "grass", "grass", "grass", "grass", "grass",
        "grass", "grass", "grass", "grass", "grass", "grass", "grass", "grass", "grass", "grass",
        "grass", "grass", "grass", "grass", "grass", "grass", "grass", "grass", "grass", "grass",
        "coarseDirt", "coarseDirt", "coarseDirt", "grass", "grass", "grass", "grass", "grass", "grass", "grass",
        "grass", "grass", "grass", "grass", "grass", "grass", "grass", "grass", "grass", "grass",
        "grass", "grass", "grass", "grass", "grass", "grass", "grass", "grass", "grass", "grass",
        "grass", "grass", "grass", "grass", "grass", "grass", "grass", "grass", "grass", "grass",
        "grass", "grass", "grass", "grass", "grass", "grass", "grass", "grass", "grass", "grass",
        "grass", "grass", "grass", "grass", "grass", "grass", "grass", "grass", "grass", "grass"
      ],

      groundDecorationPlane: ["", "", "", "", "", "", "", "", "", "",
        "", "", "", "", "", "", "", "", "", "",
        "", "", "", "", "", "", "", "", "", "",
        "", "", "", "", "", "", "", "", "", "",
        "", "", "", "", "", "", "", "", "", "",
        "", "", "", "", "", "", "", "", "", "",
        "", "", "", "", "", "", "", "", "", "",
        "", "", "", "", "", "", "", "", "", "",
        "", "", "", "", "", "", "", "", "", "",
        "tallGrass", "", "", "", "", "", "", "", "", ""],

      actionPlane: ["grass", "grass", "", "", "", "", "", "", "grass", "grass",
        "", "grass", "", "", "", "", "", "", "", "grass",
        "", "", "", "logOak", "", "", "", "", "", "",
        "", "", "", "", "", "", "", "", "", "",
        "", "", "", "", "", "", "", "logOak", "", "",
        "", "", "", "", "", "", "", "", "", "",
        "", "", "", "", "", "", "", "", "", "",
        "", "", "", "", "", "", "", "", "", "",
        "", "", "logOak", "", "", "", "", "", "", "",
        "", "", "", "", "", "", "logOak", "", "", ""
      ],

      fluffPlane: ["", "", "", "", "", "", "", "", "", "",
        "", "", "", "", "", "", "", "", "", "",
        "", "", "", "leavesOak", "", "", "", "", "", "",
        "", "", "", "", "", "", "", "", "", "",
        "", "", "", "", "", "", "", "leavesOak", "", "",
        "", "", "", "", "", "", "", "", "", "",
        "", "", "", "", "", "", "", "", "", "",
        "", "", "", "", "", "", "", "", "", "",
        "", "", "leavesOak", "", "", "", "", "", "", "",
        "", "", "", "", "", "", "leavesOak", "", "", ""
      ],

      solutionData: ["logOak"],

      solutionVerificationType: "NextTo",

      solutionCode:
        whileBlockAhead("", moveForwardBlock) +
          destroyBlock +
          turnRightBlock +
          whileBlockAhead("", moveForwardBlock) +
          destroyBlock +
          turnRightBlock +
          whileBlockAhead("", moveForwardBlock) +
          destroyBlock +
          turnRightBlock
    },

    1: {
      instructions: "Move to the sheep!",

      groundPlane: ["grass", "grass", "grass", "grass", "grass", "grass", "grass", "grass", "grass", "grass",
        "grass", "grass", "grass", "grass", "grass", "grass", "grass", "grass", "grass", "grass",
        "grass", "grass", "grass", "grass", "grass", "grass", "grass", "grass", "grass", "grass",
        "grass", "grass", "grass", "grass", "grass", "grass", "grass", "grass", "grass", "grass",
        "coarseDirt", "coarseDirt", "coarseDirt", "grass", "grass", "grass", "grass", "grass", "grass", "grass",
        "grass", "grass", "grass", "grass", "grass", "grass", "grass", "grass", "grass", "grass",
        "grass", "grass", "grass", "grass", "grass", "grass", "grass", "grass", "grass", "grass",
        "grass", "grass", "grass", "grass", "grass", "grass", "grass", "grass", "grass", "grass",
        "grass", "grass", "grass", "grass", "grass", "grass", "grass", "grass", "grass", "grass",
        "grass", "grass", "grass", "grass", "grass", "grass", "grass", "grass", "grass", "grass"
      ],

      groundDecorationPlane: ["", "", "", "", "", "", "", "", "", "",
        "", "", "", "", "", "", "", "", "", "",
        "", "", "", "", "", "", "", "", "", "",
        "", "", "", "", "", "", "", "", "", "",
        "", "", "", "", "", "", "", "", "", "",
        "", "", "", "", "", "", "", "", "", "",
        "", "", "", "", "", "", "", "", "", "",
        "", "", "", "", "", "", "", "", "", "",
        "", "", "", "", "", "", "", "", "", "",
        "tallGrass", "", "", "", "", "", "", "", "", ""],

      actionPlane: ["grass", "grass", "", "", "", "", "", "", "grass", "grass",
        "", "grass", "", "", "", "", "", "", "", "grass",
        "", "", "", "logOak", "", "", "", "", "", "",
        "", "", "", "", "", "", "", "", "", "",
        "", "", "", "", "", "", "", "logOak", "", "",
        "", "", "", "", "", "", "", "", "", "",
        "", "", "", "", "", "", "", "", "", "",
        "", "", "", "", "", "", "", "", "", "",
        "", "", "logOak", "", "", "", "", "", "", "",
        "", "", "", "", "", "", "logOak", "", "", ""
      ],

      fluffPlane: ["", "", "", "", "", "", "", "", "", "",
        "", "", "", "", "", "", "", "", "", "",
        "", "", "", "leavesOak", "", "", "", "", "", "",
        "", "", "", "", "", "", "", "", "", "",
        "", "", "", "", "", "", "", "", "", "",
        "", "", "", "", "", "", "", "", "", "",
        "", "", "", "", "", "", "", "", "", "",
        "", "", "", "", "", "", "", "", "", "",
        "", "", "leavesOak", "", "", "", "", "", "", "",
        "", "", "", "", "", "", "leavesOak", "", "", ""
      ],

      solutionData: ["this.isPlayerNextTo('logOak');"],

	  verificationFunction: function(verificationAPI) {
		return verificationAPI.playerNextToType("logOak");
	  },

      solutionCode:
        moveForwardBlock +
        moveForwardBlock +
        moveForwardBlock +
        moveForwardBlock

    },

    2: {
      instructions: "Now I need to start chopping trees! Move me to the tree and letâ€™s harvest it multiple times.",

      groundPlane: [
        "grass", "grass", "grass", "grass", "grass", "grass", "grass", "grass", "grass", "grass",
        "grass", "grass", "grass", "grass", "grass", "grass", "grass", "grass", "grass", "grass",
        "grass", "grass", "grass", "grass", "grass", "grass", "grass", "grass", "grass", "grass",
        "grass", "grass", "grass", "planksOak", "planksOak", "planksOak", "planksOak", "grass", "grass", "grass",
        "coarseDirt", "coarseDirt", "coarseDirt", "planksOak", "planksOak", "planksOak", "planksOak", "grass", "grass", "grass",
        "grass", "grass", "grass", "planksOak", "planksOak", "planksOak", "planksOak", "grass", "grass", "grass",
        "grass", "grass", "grass", "planksOak", "planksOak", "planksOak", "planksOak", "grass", "grass", "grass",
        "grass", "grass", "grass", "grass", "grass", "grass", "grass", "grass", "grass", "grass",
        "grass", "grass", "grass", "grass", "grass", "grass", "grass", "grass", "grass", "grass",
        "grass", "grass", "grass", "grass", "grass", "grass", "grass", "grass", "grass", "grass"
      ],

      groundDecorationPlane: [
        "", "", "", "", "", "", "", "", "", "",
        "", "", "", "", "", "", "", "", "", "",
        "", "", "", "", "", "", "", "", "tallGrass", "",
        "", "", "", "", "", "", "", "", "", "",
        "", "", "", "", "", "", "", "", "", "",
        "", "", "", "", "", "", "", "", "", "",
        "", "", "", "", "", "", "", "", "", "",
        "", "", "", "", "", "", "", "", "", "",
        "", "", "", "", "", "", "", "", "", "",
        "tallGrass", "", "", "", "", "", "", "", "", ""],

      actionPlane: [
        "", "", "", "", "", "", "", "", "", "",
        "", "", "", "", "", "", "", "", "", "",
        "", "", "", "", "", "", "", "", "", "",
        "", "", "", "", "", "", "", "", "", "",
        "", "", "", "", "", "", "", "", "", "",
        "", "", "", "", "", "", "", "", "", "",
        "", "", "", "", "", "", "", "", "", "",
        "", "", "", "", "", "", "", "", "", "",
        "", "", "", "", "", "", "", "", "", "",
        "", "", "", "", "", "", "", "", "", "",
      ],

      fluffPlane: ["", "", "", "", "", "", "", "", "", "",
        "", "", "", "", "", "", "", "", "", "",
        "", "", "", "", "", "", "", "", "", "",
        "", "", "", "", "", "", "", "", "", "",
        "", "", "", "", "", "", "", "", "", "",
        "", "", "", "", "", "", "", "", "", "",
        "", "", "", "", "", "", "", "", "", "",
        "", "", "", "", "", "", "", "", "", "",
        "", "", "", "", "", "", "", "", "", "",
        "", "", "", "", "", "", "", "", "", "",
      ],

      solutionData: [],

      solutionCode:
        turnRightBlock +
        moveForwardBlock +
        moveForwardBlock +
        moveForwardBlock +
        destroyBlock

    },
    3: {
      instructions: "Now I need to start chopping trees! Chop at least 3 Trees out of the 4. Nightfall is coming, chop down 3 trees as fast as you can.",

      groundPlane: ["grass", "coarseDirt", "coarseDirt", "coarseDirt", "coarseDirt", "coarseDirt", "coarseDirt", "coarseDirt", "coarseDirt", "coarseDirt",
        "coarseDirt", "coarseDirt", "coarseDirt", "coarseDirt", "coarseDirt", "coarseDirt", "coarseDirt", "coarseDirt", "coarseDirt", "coarseDirt",
        "coarseDirt", "coarseDirt", "coarseDirt", "coarseDirt", "coarseDirt", "coarseDirt", "coarseDirt", "coarseDirt", "coarseDirt", "coarseDirt",
        "coarseDirt", "coarseDirt", "coarseDirt", "coarseDirt", "coarseDirt", "coarseDirt", "coarseDirt", "coarseDirt", "coarseDirt", "coarseDirt",
        "coarseDirt", "coarseDirt", "coarseDirt", "coarseDirt", "coarseDirt", "coarseDirt", "coarseDirt", "coarseDirt", "coarseDirt", "coarseDirt",
        "coarseDirt", "coarseDirt", "grass", "coarseDirt", "coarseDirt", "coarseDirt", "coarseDirt", "coarseDirt", "coarseDirt", "coarseDirt",
        "coarseDirt", "coarseDirt", "coarseDirt", "coarseDirt", "coarseDirt", "coarseDirt", "coarseDirt", "coarseDirt", "coarseDirt", "coarseDirt",
        "coarseDirt", "coarseDirt", "coarseDirt", "coarseDirt", "coarseDirt", "coarseDirt", "coarseDirt", "coarseDirt", "coarseDirt", "coarseDirt",
        "coarseDirt", "coarseDirt", "coarseDirt", "coarseDirt", "coarseDirt", "coarseDirt", "coarseDirt", "coarseDirt", "coarseDirt", "coarseDirt",
        "coarseDirt", "coarseDirt", "coarseDirt", "coarseDirt", "coarseDirt", "coarseDirt", "coarseDirt", "coarseDirt", "coarseDirt", "coarseDirt"
      ],

      groundDecorationPlane: ["", "", "", "", "", "", "", "", "", "",
        "", "", "", "", "", "", "", "", "", "",
        "", "", "", "", "", "", "", "", "", "",
        "", "", "", "", "", "", "", "", "", "",
        "", "", "", "", "", "", "", "", "", "",
        "", "", "", "", "", "", "", "", "", "",
        "", "", "", "", "", "", "", "", "", "",
        "", "", "", "", "", "", "", "", "", "",
        "", "", "", "", "", "", "", "", "", "",
        "tallGrass", "", "", "", "", "", "", "", "", ""],

      actionPlane: ["grass", "grass", "", "", "", "", "", "", "grass", "grass",
        "", "grass", "", "", "", "", "", "", "", "grass",
        "", "", "", "logOak", "", "", "", "", "", "",
        "", "", "", "", "", "", "", "", "", "",
        "", "", "", "", "", "", "", "logOak", "", "",
        "", "", "", "", "", "", "", "", "", "",
        "", "", "", "", "", "", "", "", "", "",
        "", "", "", "", "", "", "", "", "", "",
        "", "", "logOak", "", "", "", "", "", "", "",
        "", "", "", "", "", "", "logOak", "", "", ""
      ],

      fluffPlane: ["", "", "", "", "", "", "", "", "", "",
        "", "", "", "", "", "", "", "", "", "",
        "", "", "", "leavesOak", "", "", "", "", "", "",
        "", "", "", "", "", "", "", "", "", "",
        "", "", "", "", "", "", "", "leavesOak", "", "",
        "", "", "", "", "", "", "", "", "", "",
        "", "", "", "", "", "", "", "", "", "",
        "", "", "", "", "", "", "", "", "", "",
        "", "", "leavesOak", "", "", "", "", "", "", "",
        "", "", "", "", "", "", "leavesOak", "", "", ""
      ],

      solutionData: {
		map: ["grass", "grass", "", "", "", "", "", "", "grass", "grass",
        "", "grass", "", "", "", "", "", "", "", "grass",
        "", "", "", "logOak", "", "", "", "", "", "",
        "", "", "", "", "", "", "", "", "", "",
        "", "", "", "", "", "", "", "", "", "",
        "", "", "", "", "", "", "", "", "", "",
        "", "", "", "", "", "", "", "", "", "",
        "", "", "", "", "", "", "", "", "", "",
        "", "", "logOak", "", "", "", "", "", "", "",
        "", "", "", "", "", "", "logOak", "", "", ""
      ],
	  
	  },

	  verificationFunction: function(verificationAPI) {
		return (verificationAPI.countOfTypeOnMap("logOak") < 4 );
	  },

    }

  };

  function getParameterByName(name) {
    name = name.replace(/[\[]/, "\\[").replace(/[\]]/, "\\]");
    var regex = new RegExp("[\\?&]" + name + "=([^&#]*)"),
      results = regex.exec(location.search);
    return results === null ? "" : decodeURIComponent(results[1].replace(/\+/g, " "));
  }

  // Initialize test instance of game, exposed to window for debugging.
  var phaserApp = new PhaserApp({
    containerId: 'phaser-game',
    assetRoot: '/assets/'
  });
  var levelNumber = parseInt(getParameterByName('level') || 1, 10);
  var testLevelToLoad = demoLevels[levelNumber];
  phaserApp.loadLevel(testLevelToLoad);

  $('#test-code-area').val(testLevelToLoad.solutionCode);
  $('#level-instructions').html(testLevelToLoad.instructions);

  function runCodeWithParams(code, options) {
    // execute JS code "natively"
    var params = [];
    var args = [];
    for (var k in options) {
      params.push(k);
      args.push(options[k]);
    }
    params.push(code);
    var ctor = function() {
      return Function.apply(this, params);
    };
    ctor.prototype = Function.prototype;
    return new ctor().apply(null, args);
  }

  $('#run-button').click(function () {
    var code = $('#test-code-area').val();
    var codeOrgAPI = phaserApp.codeOrgAPI;
    codeOrgAPI.startCommandCollection();
    runCodeWithParams(code, {
      codeOrgAPI: codeOrgAPI
    });
    codeOrgAPI.startAttempt(function (result) {
      $('#level-feedback').html(result ? "Success!" : "Failure").css("color", result ? "green" : "red");
    });
  });

  if (!demoLevels[levelNumber - 1]) {
    $('#previous-level').hide();
  }

  if (!demoLevels[levelNumber + 1]) {
    $('#next-level').hide();
  }

  $('#next-level').click(function() {
    window.location.href = "/?level=" + (levelNumber + 1);
  });

  $('#previous-level').click(function() {
    window.location.href = "/?level=" + (levelNumber - 1);
  });

  window.phaserApp = phaserApp;
</script>

<script>
  document.write(
    '<script src="//'
    + window.location.hostname
    + ':<%= liveReloadPort %>/livereload.js"><\/script>'
  );
</script>

</body>
</html>
